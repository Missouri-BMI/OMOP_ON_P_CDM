Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:17

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:18

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:19

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:20

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  3
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  4
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  1
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread:  2
Message:  Unable to evaluate the 'user' argument of the connection details. Most likely this is because the connection is being established in a separate R thread that has no access to variables in the main thread. This problem will not occur when using a secure approach to credentials such as keyring. See ?createConnectionDetails for more information.
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
11: (function (e) 
{
    ParallelLogger::logFatal(conditionMessage(e))
    stop(e)

10: signalCondition(cnd)
9: signal_abort(cnd, .file)
8: abort(sprintf(paste("Unable to evaluate the '%s' argument of the connection
7: value[[3]](cond)
6: tryCatchOne(expr, names, parentenv, handlers[[1]])
5: tryCatchList(expr, classes, parentenv, handlers)
4: tryCatch(invisible(connectionDetails[[name]]()), error = function(e) {
    a
3: checkDetailValidation(connectionDetails, "user")
2: assertDetailsCanBeValidated(connectionDetails)
1: DatabaseConnector::connect(connectionDetails = connectionDetails)


Thread: Main
Message:  Error(s) when calling function 'fun', see earlier messages for details
Level:  FATAL
Time:  2025-01-29 22:33:21

Stack trace:
6: h(simpleError(msg, call))
5: .handleSimpleError(function (condition) 
{
    if (is(condition, "error")) {
 
4: stop(message)
3: ParallelLogger::clusterApply(cluster = cluster, x = dropSqls, function(sql)
2: dropAllScratchTables(connectionDetails = connectionDetails, scratchDatabase
1: achilles(connectionDetails = connectionDetails, cdmDatabaseSchema = CDM_SCH

R version:
R version 4.2.2 Patched (2022-11-10 r83330)

Platform:
x86_64-pc-linux-gnu

Attached base packages:
- stats
- graphics
- grDevices
- utils
- datasets
- methods
- base

Other attached packages:
- Achilles (1.7.2)
- DatabaseConnector (6.3.3)


